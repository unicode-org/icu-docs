<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="generator" content=
"HTML Tidy for Windows (vers 26 April 2007), see www.w3.org" />
<meta http-equiv="Content-Type" content=
"text/html; charset=us-ascii" />
<title>XLIFF 1.2 Representation Guide for ICU Resource
Bundles</title>
<link rel="stylesheet" href="tr.css" type="text/css" />
<meta name="generator" content="DocBook XSL Stylesheets V1.68.1" />
<meta name="description" content=
"This document defines a guide for mapping the GNU Gettext PO (Portable Object) file format to XLIFF (XML Localisation Interchange File Format)." />
</head>
<body style="background-color: white; color: black;" alink=
"#0000FF" link="#0000FF" vlink="#840084">
<div class="article">
<div class="titlepage">
<div>
<h1><a name="id2406614" id="id2406614"></a>XLIFF 1.2 Representation
Guide for ICU Resource Bundles</h1>
</div>
<dl>
<dd>
<div class="abstract">
<h2><a name="id2495218" id="id2495218"></a> Abstract</h2>
</div>
<p>This document defines a guide for mapping the International
Components of Unicode Resource Bundle file format to XLIFF (XML
Localization Interchange File Format).</p>
</dd>
</dl>
</div>
<div class="legalnotice">
<dl>
<dt><a name="Status" id="Status"></a></dt>
<dd>
<h2>Status</h2>
</dd>
</dl>
<dl>
<dt><a name="Notice" id="Notice"></a></dt>
<dd>
<h2>Notices</h2>
</dd>
</dl>
</div>
<hr /></div>
<div class="toc">
<h2>Table of Contents</h2>
<dl>
<dt><span class="section"><a href="#s.introduction">1.
Introduction</a></span></dt>
<dd>
<dl>
<dt><span class="section"><a href="#s.introduction.purpose">1.1.
Purpose</a></span></dt>
<dt><span class="section"><a href="#Intro_Flavors">1.2.
Transitional and Strict</a></span></dt>
</dl>
</dd>
<dt><span class="section"><a href="#s.overview">2. Overview of the
ICU Resource Bundle file format</a></span></dt>
<dd><a href="#s.overview.string_resources">2.1 String
Resources</a></dd>
<dd><a href="#s.overview.integer_resources">2.2 Integer
Resources</a></dd>
<dd><a href="#s.overview_integer_vector_resources">2.3 Integer
Vector Resources</a></dd>
<dd><a href="#s.overview.binary_resources">2.4 Binary
Resources</a></dd>
<dd><a href="#s.overview.alias_resources">2.5 Alias
Resources</a></dd>
<dd><a href="#s.overview.table_resources">2.6 Table
Resources</a></dd>
<dd><a href="#s.overview.array_resources">2.7 Array
Resources</a></dd>
<dd><a href="#s.overview.implied_resource_types">2.8 Implied
Resource Types</a></dd>
<dd><a href="#s.overview.comments">2.9 Comments</a></dd>
<dd><a href="#s.overview.sample_bundle">2.10 Sample ICU Resource
Bundle</a></dd>
<dt><span class="section"><a href="#s.general_considerations">3.
General Considerations</a></span></dt>
<dd>
<dl>
<dt><span class="section"><a href=
"#s.general_considerations.languages">3.1. Source and Target
Languages</a></span></dt>
<dt><a href=
"xliff-profile-icuresourcebundle-1.2.htm#s.general_considerations.escapechars">
3.2. Translation Unit IDs</a></dt>
<dt><span class="section"><a href=
"#s.general_considerations.charsetconv">3.3. Character Set
Conversion</a></span></dt>
</dl>
</dd>
<dt><span class="section"><a href="#s.general_structure">4. General
Structure</a></span></dt>
<dt><span class="section"><a href="#s.detailed_mapping">5. Detailed
Mapping</a></span></dt>
<dd>
<dl>
<dt><span class="section"><a href="#s.detailed_mapping.tlc">5.1.
Top Level Comments</a></span></dt>
<dt><span class="section"><a href=
"#s.detailed_mapping.strings">5.2. Strings</a></span></dt>
<dd><a href="#s.detailed_mapping.strings.msg_format">5.2.1.
Preserving MessageFormat and ChoiceFormat Descriptors</a></dd>
<dt><span class="section"><a href=
"#s.detailed_mapping.integers">5.3. Integers</a></span></dt>
<dt><a href="#s.detailed_mapping.tu.autocomment"></a><a href=
"#s.detailed_mapping.binarydata">5.4. Binary Data</a></dt>
<dt><span class="section"><a href=
"#s.detailed_mapping.aliases">5.5. Aliases</a></span></dt>
<dt><span class="section"><a href="#s.detailed_mapping.arrays">5.6.
Arrays</a></span></dt>
<dt><a href="#s.detailed_mapping.intvector">5.7. Integer
Vectors</a></dt>
<dt><a href="#s.detailed_mapping.tables">5.8. Tables</a></dt>
</dl>
</dd>
</dl>
<h3>Appendixes</h3>
<dl>
<dt><span class="appendix"><a href="#id2506698">A.
Contributions</a></span></dt>
<dt><span class="appendix"><a href="#id2506764">B. Examples of
converted ICU Resource Bundle files</a></span></dt>
<dt><span class="bibliography"><a href=
"#bibl">References</a></span></dt>
</dl>
</div>
<hr />
<div class="section">
<div class="titlepage">
<div>
<h2 class="title" style="clear: both;"><a name="s.introduction" id=
"s.introduction"></a>1.&nbsp;Introduction</h2>
</div>
</div>
<p>As different tools may provide different filters to extract the
content of ICU Resource Bundles, it is important for
interoperability that they represent the extracted data in
identical manner in the XLIFF document.</p>
<div class="section">
<div class="titlepage">
<div>
<h3 class="title"><a name="s.introduction.purpose" id=
"s.introduction.purpose"></a>1.1.&nbsp;Purpose</h3>
</div>
</div>
<p>The intent of this document is to provide a set of guidelines to
represent data contained in ICU Resource Bundles as XLIFF content.
It offers a collection of recommended mapping of data types in ICU
Resource Bundles that developers of XLIFF filters can implement,
and users of XLIFF utilities can rely on to ensure a better
interoperability between tools.</p>
</div>
<h3><a name="Intro_Flavors" id="Intro_Flavors"></a>1.2 Transitional
and Strict</h3>
<p>XLIFF is specified in two "flavors". Indicate which of these
variants you are using by selecting the appropriate schema. The
schema may be specified in the XLIFF document itself or in an OASIS
catalog. The namespace is the same for both variants. Thus, if you
want to validate the document, the tool used knows which variant
you are using. Each variant has its own schema that defines which
elements and attributes are allowed in certain circumstances.</p>
<p>As newer versions of XLIFF are approved, sometimes changes are
made that render some elements, attributes or constructs in older
versions obsolete. Obsolete items are deprecated and should not be
used even though they are allowed. The XLIFF specification details
which items are deprecated and what new constructs to use.</p>
<ul>
<li id="transitional">
<p><strong>Transitional</strong> - Applications that produce older
versions of XLIFF may still use deprecated items. Use this variant
to validate XLIFF documents that you read. Deprecated elements and
attributes are allowed.</p>
<p><code>xsi:schemaLocation='urn:oasis:names:tc:xliff:document:1.2
xliff-core-1.2-transitional.xsd'</code></p>
</li>
<li id="strict">
<p><strong>Strict</strong> - All deprecated elements and attributes
are not allowed. Obsolete items from previous versions of XLIFF are
deprecated and should not be used when writing new XLIFF documents.
Use this to validate XLIFF documents that you create.</p>
<p><code>xsi:schemaLocation='urn:oasis:names:tc:xliff:document:1.2
xliff-core-1.2-strict.xsd'</code></p>
</li>
</ul>
</div>
<div class="section" xml:lang="en" lang="en">
<div class="titlepage">
<div>
<h2 class="title" style="clear: both;"><a name="s.overview" id=
"s.overview"></a>2.&nbsp;Overview of the ICU Resource Bundle file
format</h2>
</div>
</div>
<p>An ICU Resource Bundle is a collection of resources. There are
two main types of ICU resources: simple and complex. Simple
resources each contain a single piece of data. There are five types
of simple resources: string, integer, integer vector, binary and
alias. Complex resources contain other simple and complex
resources. There are two types of complex resources: table and
array.</p>
An ICU Resource Bundle consists of a top-level table resource
containing all the resources in the bundle. It is recommended that
the name of this bundle be the locale name. The name might also be
the application name followed by <code>_</code> followed by the
locale name, but the first form is preferred.<br />
<br />
ICU Resource bundles are specified in a text file. A resource is
specified by a name followed by a type name and then the resource
data enclosed in&nbsp;<code>{</code> and&nbsp;<code>}</code>.
&nbsp;The following table shows how to specify each resource
type:<br />
<br />
<table style="text-align: left; width: 646px; height: 286px;"
border="1" cellpadding="2" cellspacing="2">
<tbody>
<tr>
<td><strong>Resource Type</strong></td>
<td><strong>Type Name</strong></td>
<td><strong>Resource Data</strong></td>
</tr>
<tr>
<td>string</td>
<td><code>:string</code></td>
<td>a text string optionally enclosed in quotes</td>
</tr>
<tr>
<td>integer</td>
<td><code>:integer</code> or <code>:int</code></td>
<td>a decimal or hexadecimal integer</td>
</tr>
<tr>
<td>integer vector</td>
<td><code>:intvector</code></td>
<td>a comma separated list of integers</td>
</tr>
<tr>
<td>binary</td>
<td><code>:binary</code> or <code>:bin</code></td>
<td>a sequence of hexadecimal digits optionally enclosed in
quotes</td>
</tr>
<tr>
<td>alias</td>
<td><code>:alias</code></td>
<td>a path enclosed in quotes</td>
</tr>
<tr>
<td>table</td>
<td><code>:table</code></td>
<td>one or more named resources</td>
</tr>
<tr>
<td>array</td>
<td><code>:array</code></td>
<td>one or more unnamed resources separated by commas</td>
</tr>
</tbody>
</table>
(Notice that all type names start with a colon.)<br />
<br />
The following is a detailed explanation of how each resource type
is represented in the text file.<br />
<h3><a name="s.overview.string_resources" id=
"s.overview.string_resources"></a>2.1 String Resources</h3>
String resources are represented by a sequence of Unicode
characters, optionally enclosed in quotes. The string must be
enclosed in quotes if it's empty or if it contains whitespace
characters or any of these special characters: <code>"</code>
<code>:</code> <code>,</code> <code>{</code> <code>}</code>.
&nbsp;If the string is not not enclosed in quotes, it is simply a
sequence of non whitespace characters.<br />
<br />
The string can contain the following escape sequences:<br />
&nbsp;<br />
<table style="text-align: left; width: 632px; height: 512px;"
border="1" cellpadding="2" cellspacing="2">
<tbody>
<tr>
<td><strong>Escape</strong></td>
<td><strong>Followed By</strong></td>
<td><strong>Represents</strong></td>
</tr>
<tr>
<td><code>\u</code></td>
<td>four hex digits</td>
<td>a 16 bit Unicode code point</td>
</tr>
<tr>
<td><code>\U</code></td>
<td>eight hex digits</td>
<td>a 32 bit Unicode code point</td>
</tr>
<tr>
<td><code>\x</code></td>
<td>two hex digits</td>
<td>a Unicode code point between U+0000 and U+00FF</td>
</tr>
<tr>
<td><code>\x{</code></td>
<td>one to eight hex digits then <code>}</code></td>
<td>a Unicode code point</td>
</tr>
<tr>
<td><code>\</code></td>
<td>one to three octal digits</td>
<td>a Unicode code point between U+0000 and U+00FF</td>
</tr>
<tr>
<td><code>\c</code></td>
<td>any character</td>
<td>a control code (low-order four bits of character's code
point)</td>
</tr>
<tr>
<td><code>\a</code></td>
<td></td>
<td>ASCII audible alert&nbsp; (U+0007)</td>
</tr>
<tr>
<td><code>\b</code></td>
<td></td>
<td>ASCII backspace (U+0008)</td>
</tr>
<tr>
<td><code>\e</code></td>
<td></td>
<td>ASCII escape (U+001B)</td>
</tr>
<tr>
<td><code>\f</code></td>
<td></td>
<td>ASCII form feed (U+000C)</td>
</tr>
<tr>
<td><code>\n</code></td>
<td></td>
<td>ASCII newline (U+000A)</td>
</tr>
<tr>
<td><code>\r</code></td>
<td></td>
<td>ASCII carriage return (U+000D)</td>
</tr>
<tr>
<td><code>\t</code></td>
<td></td>
<td>ASCII tab (U+0009)</td>
</tr>
<tr>
<td><code>\v</code></td>
<td></td>
<td>ASCII vertical tab (U+000B)</td>
</tr>
<tr>
<td><code>\</code></td>
<td>any other character</td>
<td>the character (e.g. <code>\\</code>, <code>\"</code>,
<code>\}</code>)</td>
</tr>
</tbody>
</table>
<br />
Here are some example string resources:<br />
<pre>
quoted_string :string {<br />    "This is a simple quoted string."<br />}<br /><br />unquoted_string :string {<br />    Supercalifragilisticexpialidocious<br />}<br /><br />string_with_escapes :string {<br />    "The ideograph for \"sun\" is \u65E5."<br />}<br />
</pre>
A string resource can be composed of multiple strings separated by
whitespace characters. Quoted strings are simply concatenated
together. For example, the following two definitions produce the
same resource:<br />
<pre>
only_a_test :string {<br />    "This is "<br />    "only a test."<br />}<br />
</pre>
<pre>
only_a_test :string {<br />    "This is only a test."<br />}<br />
</pre>
If the strings are not quoted, they are concatenated with a space
between them. Again, the following two definitions produce the same
resource:<br />
<pre>
only_a_test :string {<br />    This<br />    is<br />    only<br />    a<br />    test.<br />}<br />
</pre>
<pre>
only_a_test :string {<br />    This is only a test.<br />}<br />
</pre>
(Note that in this example, each word is actually a separate
string.)<br />
<br />
This method of specifying string should not be used for language
that are written without spaces because the concatenation will add
spaces to the string.<br />
<br />
String resources may contain variable data represented by a special
descriptor enclosed in <code>{</code> and <code>}</code>. The
variable data is supplied at runtime using the ICU
<code>MessageFormat</code> and <code>ChoiceFormat</code>
interfaces. Consult <a href=
"http://www.icu-project.org/userguide/formatMessages.html">the ICU
User Guide</a> for more information about these interfaces. If
<code>MessageFormat</code> or <code>ChoiceFormat</code> descriptors
are present then either the string must be quoted or the
<code>{</code> and <code>}</code> must be escaped.<br />
<br />
(Note: <code>ChoiceFormat</code> messages are difficult to
translate without a detailed knowledge of their syntax. For this
reason, it is recommended that their use be avoided.)<br />
<br />
String resources can also be specified indirectly using the type
name <code>:include</code> and a string value that is the name of a
file containing the string resource data. The string resource data
in this file can contain the same escape sequences as a regular
string resource.<br />
<h3><a name="s.overview.integer_resources" id=
"s.overview.integer_resources"></a>2.2 Integer Resources</h3>
An integer resource is specified by a sequence of decimal digits or
by <code>0x</code> followed by a sequence of hexadecimal digits. A
negative value is preceded by a minus sign. The value is a 32 bit
signed value. Here are some examples of&nbsp;integer
resources:<br />
<pre>
window_height :integer {<br />    600<br />}<br /><br />window_offset :integer {<br />    -200<br />}<br /><br />checksum :integer {<br />    0xBCFE3759<br />}<br />
</pre>
<h3><a name="s.overview_integer_vector_resources" id=
"s.overview_integer_vector_resources"></a>2.3 Integer Vector
Resources</h3>
An integer vector is specified by a sequence of integer values
separated by commas. Each integer value is specified the same way
that integer resources are specified. The last value may be
followed by a comma. The vector may contain a single value,
multiple values, or it may be empty. Here are some examples of
integer vector resources:<br />
<pre>
font_sizes :intvector {<br />    8,<br />   10,<br />   12,<br />   18,<br />   24,<br />   36<br />}<br /><br />single_font_size :intvector {<br />    12<br />}<br /><br />empty :intvector {<br />}<br />
</pre>
<h3><a name="s.overview.binary_resources" id=
"s.overview.binary_resources"></a>2.4 Binary Resources</h3>
A binary resource represents a chunk of binary data. It is
represented by a sequence of hexadecimal digits, optionally
enclosed in quotes. There must be an even number of digits. Quotes
must be used to specify an empty resource. For example:<br />
<pre>
md5_sum :binary {bcfe765be0fdfab22c5f9efd12c52abc}<br />
</pre>
<br />
Binary resources can be specified indirectly using the type name
<code>:import</code> and a quoted path for file containing the
binary data. For example:<br />
<pre>
logo :import {"logo.gif"}<br />
</pre>
<h3><a name="s.overview.alias_resources" id=
"s.overview.alias_resources"></a>2.5 Alias Resources</h3>
An alias resource is a reference to another resource, possible in a
different Resource Bundle. The reference is specified as a path in
quotes. For example:<br />
<pre>
authors :alias {"root/authors"}<br />
</pre>
(Note: in general an alias resource that's used in one Resource
Bundle may not be appropriate in another Resource Bundle. For this
reason the use of alias resources be avoided.)
<h3><a name="s.overview.table_resources" id=
"s.overview.table_resources"></a>2.6 Table Resources</h3>
A table resource contains one or more named resources, including
array resources and other table resources. The contained resources
can be any type and are accessed by name. The top-level resource in
an ICU Resource Bundle is a table resource that contains all of the
resources in the bundle. The name of this resource is a locale
name. Here are some examples of table resources:<br />
<pre>
primary_colors :table {<br />    red    :string {"Red"}<br />    orange :string {"Orange"}<br />    yellow :string {"Yellow"}<br />    green  :string {"Green"}<br />    blue   :string {"Blue"}<br />    indigo :string {"Indigo"}<br />    violet :string {"Violet"}<br />}<br /><br />fonts :table {<br />    default_size :integer {12}<br /><br />    font_sizes :intvector {<br />        8,<br />       10,<br />       12,<br />       16,<br />       24,<br />       36<br />    }<br /><br />    font_families :array {<br />        :string {"Times"},<br />        :string {"Helvetica"},<br />        :string {"Courier"}<br />    }<br />}<br />
</pre>
<h3><a name="s.overview.array_resources" id=
"s.overview.array_resources"></a>2.7 Array Resources</h3>
An array resource contains a sequence of unnamed resources,
separated by commas. The contained resources are accessed by index
rather than by name. Here are some examples of array
resources:<br />
<pre>
file_menu_items :array {<br />    :string {"Cut"},<br />    :string {"Copy"},<br />    :string {"Paste"},<br />    :string {"Delete"}<br />}<br /><br />fonts :array {<br />    :integer {12},<br /><br />    :intvector {<br />        8,<br />       10,<br />       12,<br />       16,<br />       24,<br />       36<br />    },<br /><br />    :array {<br />        :string {"Times"},<br />        :string {"Helvetica"},<br />        :string {"Courier"}<br />    }<br />}<br />
</pre>
<br />
If the array contains all string resources, they can be specified
without the <code>:string</code> type name or the enclosing
<code>{</code> and <code>}</code>. For example:<br />
<pre>
fish :array {<br />    "One fish",<br />    "Two fish",<br />    "Red fish",<br />    "Blue fish"<br />}<br />
</pre>
<h3><a name="s.overview.implied_resource_types" id=
"s.overview.implied_resource_types"></a>2.8 Implied Resource
Types</h3>
If a type name is not given, the type is determined by looking at
what follows the <code>{</code>. A resource name followed by a type
name or a <code>{</code> means that the resource is a table. A type
name or a <code>{</code> means that the resource is an array. A
string followed by a comma means that the resource is an array of
strings. A string followed by a <code>}</code> means that the
resource is a string. Here are some examples of resources with
implied types:<br />
<pre>
color_table {<br />    red    :string {"Red"}<br />    orange :string {"Orange"}<br />    yellow :string {"Yellow"}<br />    green  :string {"Green"}<br />    blue   :string {"Blue"}<br />    indigo :string {"Indigo"}<br />    violet :string {"Violet"}<br />}<br /><br />file_menu_array {<br />    :string {"Cut"},<br />    :string {"Copy"},<br />    :string {"Paste"},<br />    :string {"Delete"}<br />}<br /><br />fish_string_array {<br />    "One fish",<br />    "Two fish",<br />    "Red fish",<br />    "Blue fish"<br />}<br />
</pre>
<h3><a name="s.overview.comments" id="s.overview.comments"></a>2.9
Comments<br /></h3>
The text file can also contain C++ style comments. That is,
single-line comments that start with <code>//</code> and extend to
the end of the line, and multi-line comments that start
with&nbsp;<code>/*</code> and end with&nbsp;<code>*/</code>. Here
are some examples of comments:<br />
<pre>
/*<br /> * The resources for a fictitious Hello World application. The application<br /> * displays a single window with a logo and the hello message.<br /> */<br />sample :table {<br /> ....<br />}<br /><br />// The names of<br />// the translators<br />translators :array {<br />    "John E. English",<br />    "Alan Smithee"<br />}<br /><br />checksum :integer { // a CRC checksum of<br />    0xBCFE3759      // the application binary<br />}<br />
</pre>
<br />
Comments that start with&nbsp;<code>/**</code> and end
with&nbsp;<code>*/</code>are documentation comments These comments
apply to the following resource and may contain two special tokens.
The token <code>@translate</code> instructs the translator whether
or not the resource should be translated. The
token&nbsp;<code>@note</code>begins a special note to the
translator. All of the comment text following these tokens up to
the end of the comment or the next <code>@</code>, is associated
with the token. It is not necessary to have whitespace after the
token. Leading and trailing whitespace and <code>*</code>
characters are ignored. Here are some examples of documentation
comments:<br />
<pre>
/**<br /> * The names of the translators.<br /> *<br /> * @note replace these with your names.<br /> */<br />translators :array {<br />    "John E. English",<br />    "Allen Smythee"<br />}<br /><br />/**<br /> * The width of the application window.<br /> *<br /> * @translate yes<br /> * @note Be sure that the window is<br /> *       wide enough to contain the<br /> *       translated greeting.<br /> */<br />window_width :integer {<br />    600<br />}<br /><br />/**<br /> * The height of the application window<br /> *<br /> * @translate yes<br /> * @noteThere is no space after the token!<br /> */<br />window_height :integer {<br />    400<br />}<br />
</pre>
<h3><a name="s.overview.sample_bundle" id=
"s.overview.sample_bundle"></a>2.10 Sample ICU Resource Bundle</h3>
Here is a sample ICU Resource Bundle containing the English
resources for a fictitious Hello World application. For clarity all
resource type names have been specified.<br />
<pre>
/**<br /> * The resources for a fictious Hello World application. The application<br /> * displays a single window with a logo and the hello message.<br /> */<br />en :table {<br />    /**<br />     * @note This is the message that the application displays to the user.<br />     */<br />    hello :string {"Hello, world!"}<br /><br />    /**<br />     * The height of the application window.<br />     *<br />     * @note Make sure this is tall enough to display the translated message.<br />     */<br />    window_height :integer {200}<br /><br />    /**<br />     * The width of the application window.<br />     *<br />     * @note Make sure this is wide enough to display the translated message.<br />     */<br />    window_width :integer {600}<br /><br />    /**<br />     * The application version number<br />     *<br />     * @translate no<br />     */<br />    version :intvector {<br />        1,  // major version<br />        2,  // minor version<br />        3   // patch level<br />    }<br /><br />    /**<br />     * The MD5 checksum of the application.<br />     *<br />     * @translate no<br />     */<br />    md5_sum :binary {bcfe765be0fdfab22c5f9efd12c52abc}<br /><br />    /**<br />     * The logo to be displayed in the application window.<br />     *<br />     * @translate no<br />     */<br />    logo :import {"logo.gif"}<br /><br />    /*<br />     * The Authors. Just use the name from the root bundle.<br />     */<br />    authors :alias {"root/authors"}<br /><br />    /*<br />     * The translators.<br />     */<br />    translators :array {<br />        :string {"John E. English"},<br />        :string {"Alan Smithee"},<br />        :string {"Allen Smythee"}<br />    }<br /><br /><br />    /**<br />     * The application menus.<br />     *<br />     * @note Keep the menus and the menu items in this order.<br />     */<br />    menus :table {<br />        file_menu :table {<br />            name :string {"File"}<br /><br />            items :array {<br />                :string {"New"},<br />                :string {"Open..."},<br />                :string {"Save"},<br />                :string {"Save As..."},<br />                :string {"Exit"}<br />            }<br />        }<br /><br />        edit_menu :table {<br />            name :string {"Edit"}<br /><br />            items :array {<br />                :string {"Cut"},<br />                :string {"Copy"},<br />                :string {"Paste"},<br />                :string {"Delete"}<br />            }<br />        }<br /><br />        help_menu :table {<br />            name :string {"Help"}<br /><br />            items :array {<br />                :string {"Help Topics"},<br />                :string {"About Hello World"}<br />            }<br />        }<br />    }<br />}<br />
</pre></div>
<div class="section">
<div class="titlepage">
<div>
<h2 class="title" style="clear: both;"><a name=
"s.general_considerations" id=
"s.general_considerations"></a>3.&nbsp;General Considerations</h2>
</div>
</div>
<p>This section discusses the general considerations to take in
account when extracting data from ICU Resource Bundles. &nbsp;The
ICU <code>genrb</code> tool can Resource Bundle source files to
XLIFF files. The ICU4J <code>XLIFF2ICUConverter</code> tool
converts XLIFF files to ICU Resource Bundle source files. For
consistency, these tools should be used whenever possible.</p>
<div class="section">
<div class="titlepage">
<div>
<h3 class="title"><a name=
"s.general_considerations.resource_bundles" id=
"s.general_considerations.resource_bundles"></a>3.1. ICU Resource
Bundles</h3>
</div>
</div>
<p>The ICU <code>genrb</code> tool converts the Resource Bundle
text files into binary resource files. It is possible to extract
data from either the text or the binary files. It is recommended to
extract the data from the text files because the comments, and the
meta-information that they contain, such as <code>@translate</code>
and <code>@note</code>, are not included in the binary files.</p>
<p>Where practical, it is recommended to maintain resource data as
XLIFF files and convert to ICU format only as a build step. For
more information on localization workflow process, please see the
<a href=
"http://www.icu-project.org/docs/papers/localize_with_XLIFF_and_ICU.pdf">
Localizing with XLIFF &amp; ICU</a>.</p>
</div>
<div class="section">
<div class="titlepage">
<div>
<h3 class="title"><a name="s.general_considerations.languages" id=
"s.general_considerations.languages"></a>3.2. Source and Target
Languages</h3>
In ICU Resource Bundle files the source language is appended to the
file name. As an alternative, the filter tools can provide an
option for specifying the source language of the file. ICU uses
[<a href=
"xliff-profile-icuresourcebundle-1.2.htm#refRFC4646"><span class=
"abbrev">RFC 4646</span></a>] for naming its files and resource.
The ICU resource format does not provide a way to store both a
source and a target language in the resource file. The idea is that
developers work on generating the base resource file and convert
that file to multiple XLIFF files where the target language is
specifed. So the tools that convert ICU resources to XLIFF must
provide an option for specifying the target language of each XLIFF
file.</div>
</div>
</div>
<div class="section">
<div class="titlepage">
<div>
<h3 class="title"><a name="s.general_considerations.ids" id=
"s.general_considerations.ids"></a>3.3. Translation Unit IDs</h3>
</div>
</div>
<p>ICU Resource Bundle file format uses ID based translation units
just like other major resource formats.</p>
</div>
<div class="section" xml:lang="en" lang="en">
<div class="titlepage">
<div>
<h3 class="title"><a name="s.general_considerations.charsetconv"
id="s.general_considerations.charsetconv"></a>3.4. Character Set
Conversion</h3>
</div>
</div>
<p>The source of ICU Resource Bundles can be any one of the major
encodings supported by ICU, however it is strongly recommended that
the files be stored in UTF-8 encoding.</p>
<p>When extracting data from ICU Resource Bundle files, filters
should respect the encoding of the file and provide conversion to
<code class="code">UTF-8</code> for storing data in XLIFF.</p>
</div>
</div>
<div class="section" xml:lang="en" lang="en">
<div class="titlepage">
<div>
<h2 class="title" style="clear: both;"><a name=
"s.general_structure" id="s.general_structure"></a>4.&nbsp;General
Structure</h2>
Note: all XLIFF source examples will be shown with extra whitespace
to enhance readability. It is recommended that filters generate
XLIFF files without any extra whitespace to keep the generated
files as small as possible.</div>
</div>
<pre class="programlisting">
&lt;?xml version="1.0" encoding="utf-8"?&gt;<br />&lt;xliff version='1.2' xmlns='urn:oasis:names:tc:xliff:document:1.2'<br />        xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'<br />        xsi:schemaLocation='urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd'&gt;<br />    &lt;file xml:space = "preserve" source-language = "en" datatype = "x-icu-resource-bundle"<br />            original = "en.txt" date = "2007-04-11T19:03:09Z"&gt;<br />        &lt;header&gt;<br />            &lt;tool tool-id = "genrb-3.3-icu-3.7.1" tool-name = "genrb"/&gt;<br />        &lt;/header&gt;<br />        &lt;body&gt;<br />            &lt;group id = "en" restype = "x-icu-table"&gt;<br />                <em><code>... the resources in the resource bundle...</code></em><br />            &lt;/group&gt;<br />        &lt;/body&gt;<br />    &lt;/file&gt;<br />&lt;/xliff&gt;<br />
</pre>
<p>Each ICU Resource Bundle file maps to one XLIFF <code class=
"sgmltag-element">&lt;file&gt;</code> element. XLIFF
representations of ICU Resource Bundle files should have the
<code class="code">datatype</code> attribute with a value of
<code class="code">"x-icu-resource-bundle"</code>, and the
<code class="code">original</code> attribute set to the name of the
Resource Bundle file from which the data was extracted.</p>
<p>The <code>&lt;file&gt;</code> element should have an
<code>xml:space</code> attribute with a value of
<code>"preserve"</code>, establishing this as the default for the
whole file. Filters should retain the whitespace in individual
resources.</p>
<p>The optional XLIFF <code>&lt;header&gt;</code> element contains
a <code>&lt;tool&gt;</code> element which identifies the tool that
extracted the data from the ICU Resource Bundle.</p>
<p>The XLIFF <code class="sgmltag-element">&lt;body&gt;</code>
element contains translation units, which may be grouped using
hierarchical <code class=
"sgmltag-element">&lt;group&gt;</code>elements to represent table
and array resources. Since the top-level resource in a Resource
Bundle is a table resource, all of the resources in the file will
be inside of a <code>&lt;group&gt;</code> element.</p>
</div>
<div class="section" xml:lang="en" lang="en">
<div class="titlepage">
<div>
<h2 class="title" style="clear: both;"><a name="s.detailed_mapping"
id="s.detailed_mapping"></a>5.&nbsp;Detailed Mapping</h2>
</div>
</div>
<div class="section" xml:lang="en" lang="en">
<div class="titlepage">
<div>
<h3 class="title"><a name="s.detailed_mapping.tlc" id=
"s.detailed_mapping.tlc"></a>5.1.&nbsp;Comments</h3>
</div>
</div>
<p>Documentation comments should be extracted and included as
comments inside the next <code>&lt;group&gt;</code>,
<code>&lt;trans-unit&gt;</code> or <code>&lt;bin-unit&gt;</code>
generated after the comment is extracted. If the comment
contains&nbsp; <code>@translate</code>, this should be used to set
the <code>tranlsate</code> attribute on the
next&nbsp;<code>&lt;group&gt;</code>,
<code>&lt;trans-unit&gt;</code> or <code>&lt;bin-unit&gt;</code>
generated after the comment is extracted. It is not necessary to
generate a <code>translate</code> attribute for <code>@translate
yes</code> since this is the default.</p>
<p>If the comment contains <code>@note</code>, this should be
extracted to a <code>&lt;note&gt;</code> element in the
next&nbsp;<code>&lt;group&gt;</code>,
<code>&lt;trans-unit&gt;</code> or <code>&lt;bin-unit&gt;</code>
generated after the comment is extracted.</p>
<p>For example:</p>
<pre>
/**<br /> * These are top level comments for the bundle. Tag name: root<br /> * @translate yes<br /> * @note Comments for tag named root<br /> */<br />root{<br />    /**<br />     * The CRC checksum for<br />     * the application binary.<br />     *<br />     * @translate no<br />     * @noteThis was calculated by developement.<br />     */<br />    checksum :integer {<br />        0xBCFE3759<br />    }<br />}<br />
</pre>
would be mapped to:
<pre>
    &lt;file xml:space = "preserve" source-language = "en" datatype =<br />          "x-icu-resource-bundle" original = "root.txt" date = "2007-01-17T20:58:58Z"&gt;<br />        &lt;header&gt;<br />            &lt;tool tool-id = "genrb-3.3-icu-3.7.1" tool-name = "genrb" /&gt;<br />        &lt;/header&gt;<br />        &lt;body&gt;<br />            &lt;group id = "root" restype = "x-icu-table"&gt;<br />                &lt;!--These are top level comments for the bundle. Tag name: root--&gt;<br />                &lt;note&gt;Comments for tag named root&lt;/note&gt;<br />                &lt;trans-unit id = "checksum" resname = "checksum" translate = "no"&gt;<br />                    &lt;!--The CRC checksum for the application binary.--&gt;<br />                    &lt;source&gt;0xBFCE3759&lt;/source&gt;<br />                    &lt;note&gt;This was calculated by development.&lt;/note&gt;<br />                &lt;/trans-unit&gt;<br />            &lt;/group&gt;<br />        &lt;/body&gt;<br />    &lt;/file&gt;<br />
</pre>
<h3><a name="s.detailed_mapping.strings" id=
"s.detailed_mapping.strings"></a>5.2. Strings</h3>
<div class="titlepage">
<div>Each string resource should be mapped to a single
<code>&lt;source&gt;</code> element within a
<code>&lt;trans-unit&gt;</code>. Filters should concatenate
multiple strings into a single string and convert all escape
sequences to the corresponding characters.</div>
</div>
<p>For example the string resources:</p>
<pre>
hello :string {<br />    "Hello, world!"<br />}<br /><br /><br />string_with_escapes :string {<br />    "The ideograph for \"sun\" is \u65E5."<br />}<br /><br />only_a_test :string {<br />    This<br />    is<br />    only<br />    a<br />    test.<br />}<br />
</pre>
would be mapped to:<br />
<pre>
    &lt;trans-unit id = "hello" resname = "hello"&gt;<br />        &lt;source&gt;Hello, world!&lt;/source&gt;<br />    &lt;/trans-unit&gt;<br /><br />    &lt;trans-unit id = "string_with_escapes" resname = "string_with_escapes"&gt;<br />        &lt;source&gt;The ideograph for "sun" is &#26085;.&lt;/source&gt;<br />    &lt;/trans-unit&gt;<br /><br />    &lt;trans-unit id = "only_a_test" resname = "only_a_test"&gt;<br />        &lt;source&gt;This is only a test.&lt;/source&gt;<br />    &lt;trans-unit&gt;<br />
</pre></div>
<div class="section" xml:lang="en" lang="en">
<div class="titlepage">
<div><span class="replaceable"><br />
For string resources specified using <code>:include</code>, filters
should read the contents of the included file and process it as if
it had been specified directly.<br />
<br /></span> <span class="replaceable">For example:</span>
<pre>
<span class=
"replaceable">    /**<br />     * Included text.<br />     */<br />    included_text :include {"mystring.txt"}</span>
</pre>
<span class="replaceable">would be mapped to:</span>
<pre>
<span class=
"replaceable">   &lt;trans-unit id = "included_text" resname = "included_text"&gt;<br />        &lt;!--Included text.--&gt;<br />        &lt;source&gt;<em><span class="replaceable"><code>Contents of mystring.txt</code></span></em>&lt;/source&gt;<br />   &lt;/trans-unit&gt;</span>
</pre>
<h4><a name="s.detailed_mapping.strings.msg_format" id=
"s.detailed_mapping.strings.msg_format"></a>5.2.1.&nbsp;Preserving
MessageFormat and ChoiceFormat Descriptors</h4>
<p><code>MessageFormat</code> descriptors in string resources
represent variable data that is supplied at runtime, and should not
be translated. These descriptors should be mapped to a
<code>&lt;ph&gt;</code> element. <code>ChoiceFormat</code>
descriptors in string resources represent a combination of variable
data that is supplied at runtime and text that should be
translated. These descriptors should also be mapped to a
<code>&lt;ph&gt;</code> element and the translatable text within
them should be mapped to a <code>&lt;sub&gt;</code> element. For
example:</p>
<pre id="listing_5">
   msgFormat :string {<br />      "At {1,time} on {1,date}, there was {2} on planet{0,number,integer}."<br />   }<br /><br />    choiceFormat :string {<br />        "Folder {0} contains {1,choice,0#no files|1#one file|1&lt;{1,number,integer} files}."<br />    }
</pre>
<p>would be mapped to:</p>
<div class="titlepage">
<div>
<pre id="listing_6">
    &lt;source&gt;At &lt;ph id="1"&gt;{1,time}&lt;/ph&gt; on &lt;ph id="2"&gt;{1, date}&lt;/ph&gt;, <br />            there was &lt;ph id="3"&gt;{2}&lt;/ph&gt; on planet &lt;ph id="4"&gt;{0,number,integer}&lt;/ph&gt;.<br />    &lt;/source&gt;<br /><br />    &lt;source&gt;Folder &lt;ph id="1"&gt;{0}&lt;/ph&gt; contains <br />      &lt;ph id="2"&gt;{1,choice,0#&lt;sub&gt;no files&lt;/sub&gt;|1#&lt;sub&gt;one file&lt;/sub&gt;|1&amp;lt;{1,number,integer}<br />                 &lt;sub&gt; files&lt;/sub&gt;}&lt;/ph&gt;.<br />    &lt;/source&gt;
</pre>
(Note: extra whitespace has been added to these XLIFF examples for
readability. In both examples the <code>&lt;source&gt;</code>
element should be on a single line.)<br />
<h3><a name="s.detailed_mapping.integers" id=
"s.detailed_mapping.integers"></a>5.3. Integers</h3>
</div>
</div>
<p>Each integer resource should be mapped to a single
<code>&lt;source&gt;</code> elements inside of a
<code>&lt;trans-unit&gt;</code> element . The &lt;trans-unit&gt;
element should have a <code>restype</code> attribute with a value
of <code>"x-icu-integer"</code>. There is no need to convert
integer resourcs specified as hexadecimal numbers, i.e. those
strarting with <code>0x</code>, to decimal notation.</p>
<p>For example:</p>
<pre>
    /**<br />     * The height of the application window.<br />     *<br />     * @note Make sure this is tall enough to display the translated message.<br />     */<br />    window_height :integer {200}<br /><br />    /**<br />     * The width of the application window.<br />     *<br />     * @note Make sure this is wide enough to display the translated message.<br />     */<br />    window_width :integer {600}<br /><br />    /**<br />     * The CRC checksum for<br />     * the application binary.<br />     *<br />     * @translate no<br />     * @noteThis was calculated by developement.<br />     */<br />    checksum :integer {0xBCFE3759}<br />
</pre>
would be mapped to:<br />
<pre>
    &lt;trans-unit id = "window_height" resname = "window_height" restype = "x-icu-integer"&gt;<br />        &lt;!--The height of the application window.--&gt;<br />        &lt;source&gt;200&lt;/source&gt;<br />        &lt;note&gt;Make sure this is tall enough to display the translated message.&lt;/note&gt;<br />    &lt;/trans-unit&gt;<br />             <br />    &lt;trans-unit id = "<span class="replaceable"><span class="replaceable"><span style="font-family: monospace;">window_width" resname = "window_width</span></span></span><span class="replaceable">"</span> restype = "x-icu-integer"<span class="replaceable">&gt;<br />        &lt;--The width of the application window.--&gt;<br />        &lt;source&gt;600&lt;/source&gt;<br />        &lt;note&gt;</span> Make sure this is wide enough to display the translated message.<span class="replaceable">&lt;/note&gt;<br />    &lt;/trans-unit&gt;<br /><br /></span>    &lt;trans-unit id = "checksum" resname = "checksum" restype = "x-icu-integer" translate = "no"&gt;<br />        &lt;!--The CRC checksum for the application binary.--&gt;<br />        &lt;source&gt;0xBCEF3759&lt;/source&gt;<br />        &lt;note&gt;This was calculated by development.&lt;/note&gt;<br />    &lt;/trans-unit&gt;<br />
</pre>
<h3 class="title"><em class="replaceable"><a name=
"s.detailed_mapping.binarydata" id=
"s.detailed_mapping.binarydata"></a></em><span class=
"replaceable">5.4. Binary Data</span></h3>
<p><span class="replaceable">Each binary resource should be mapped
to a single <code>&lt;bin-source&gt;</code> element inside of a
<code>&lt;bin-unit&gt;</code> element. The
<code>&lt;bin-unit&gt;</code> should have a <code>restype</code>
attribute with a value of <code>"x-icu-binary"</code> and a
<code>mime-type</code> attribute with the value
<code>"application/octet-stream"</code>. The
<code>&lt;bin-source&gt;</code> element should contain an
<code>&lt;internal-file&gt;</code> element that specifies the
binary data.</span></p>
<p><span class="replaceable">For example:</span></p>
<pre>
<span class="replaceable"><span style=
"font-family: &quot;Courier New&quot;;">    /**<br />     * The MD5 checksum of the application.<br />     *<br />     * @translate no<br />     */<br />    md5_sum :binary {bcfe765be0fdfab22c5f9efd12c52abc}</span></span>
</pre>
<span class="replaceable">would be mapped to:</span>
<pre>
<em class="replaceable">  </em><span class=
"replaceable">  &lt;bin-unit</span><span class=
"replaceable"> id = "md5_sum"</span><span class=
"replaceable"> </span><span class=
"replaceable">resname = "md5_sum"</span><span class=
"replaceable">  mime-type = "application/octet-stream"<br />              </span><span class="replaceable">restype = "x-icu-binary" </span><span class="replaceable">translate = "no"&gt;<br />        &lt;!--The MD5 checksum of the application.--&gt;<br />        &lt;bin-source&gt;<br />            &lt;internal-file form = "application/octet-stream" crc = "187654673"&gt;BCFE765BE0FDFAB22C5F9EFD12C52ABC&lt;/internal-file&gt;<br />        &lt;/bin-source&gt;<br />    &lt;/bin-unit&gt;</span>
</pre>
<span class="replaceable"><br />
Binary resources specified using <code>:import</code> should be
mapped to a single <code>&lt;external-file&gt;</code> element
inside of a <code>&lt;bin-source&gt;</code> element inside of a
<code>&lt;bin-unit&gt;</code> element. The</span> <span class=
"replaceable"><code>&lt;bin-unit&gt;</code> &nbsp;element should
have a</span><span class="replaceable"><code>restype</code>
attribute with a value of <code>"x-icu-binary"</code>.</span>
<p><span class="replaceable">For example:</span></p>
<pre>
<span class=
"replaceable">    /**<br />     * The logo to be displayed in the application window.<br />     *<br />     * @translate no<br />     */<br />    logo :import {"logo.gif"}</span>
</pre>
<span class="replaceable">would be mapped to:</span>
<pre>
<span class="replaceable">   &lt;bin-unit</span><span class=
"replaceable"> id = "logo"</span><span class=
"replaceable"> </span><span class=
"replaceable">resname = "logo"</span><span class=
"replaceable"><br />             mime-type = "application/octet-stream" <br />             </span><span class="replaceable">restype = "x-icu-binary" </span><span class="replaceable">translate = "no"&gt;<br />       &lt;!--The logo to be displayed in the application window.--&gt;<br />       &lt;bin-source&gt;<br />              &lt;external-file href = "logo.gif"/&gt;<br />       &lt;/bin-source&gt;<br />   &lt;/bin-unit&gt;</span>
</pre>
<h3 class="title"><em class="replaceable"><a name=
"s.detailed_mapping.aliases" id=
"s.detailed_mapping.aliases"></a></em><span class=
"replaceable">5.5. Aliases</span></h3>
<p><span class="replaceable">Each alias resource should be mapped
to a single <code>&lt;source&gt;</code> element inside of a
<code>&lt;trans-unit&gt;</code> element. The
<code>&lt;trans-unit&gt;</code> should have a <code>restype</code>
attributue with a value of <code>"x-icu-alias"</code>. The alias
path should be mapped to a <code>&lt;ph&gt;</code> element with an
<code>id</code> attribute with a value that is the path. For an
alias resource the <code>translate</code> attribute should always
be set to <code>"no"</code>.</span></p>
<p><span class="replaceable">For example:</span></p>
<pre>
<span class=
"replaceable">    authors :alias {"root/authors"}</span>
</pre>
<span class="replaceable">would be mapped to:</span>
<pre>
<span class="replaceable">    &lt;trans-unit</span><span class=
"replaceable"> id = "authors" resname = "authors"</span><span class="replaceable"> restype = "x-icu-alias" translate = "no"&gt;<br />        &lt;source&gt;&lt;ph id="root/authors"/&gt;&lt;/source&gt;<br />    &lt;/trans-unit&gt;</span>
</pre>
<h3 class="title"><em class="replaceable"><a name=
"s.detailed_mapping.arrays" id=
"s.detailed_mapping.arrays"></a></em><span class="replaceable">5.6.
Arrays</span></h3>
<span class="replaceable">Each array resource should be mapped to a
single <code>&lt;group&gt;</code> element with a
<code>restype</code> attribute with a value of
<code>"x-icu-array"</code>. Because the resources contained in the
array are not named their <code>id</code> atrributes should have a
value that is the name of the array followed by a <code>_</code>
followed by the resource's index in the array.<br />
<br />
For example:</span>
<pre>
<span class=
"replaceable">    menu_items :array {<br />        :string {"Cut"},<br />        :string {"Copy"},<br />        :string {"Paste"},<br />        :string {"Delete"}<br />    }</span>
</pre>
<span class="replaceable">would be mapped to:</span>
<pre>
<span class="replaceable">    &lt;group</span><span class=
"replaceable"> id = "menu_items" resname = "menu_items"</span><span class="replaceable"> restype = "x-icu-array"&gt;<br />        &lt;trans-unit id = "menu_items_0"&gt;<br />            &lt;source&gt;Cut&lt;/source&gt;<br />        &lt;/trans-unit&gt;<br /></span><span class="replaceable">        &lt;trans-unit id = "menu_items_1"&gt;<br />            &lt;source&gt;Copy&lt;/source&gt;<br />        &lt;/trans-unit&gt;<br /></span><span class="replaceable">        &lt;trans-unit id = "menu_items_2"&gt;<br />            &lt;source&gt;Paste&lt;/source&gt;<br />        &lt;/trans-unit&gt;<br /></span><span class="replaceable">        &lt;trans-unit id = "menu_items_3"&gt;<br />            &lt;source&gt;Delete&lt;/source&gt;<br />        &lt;/trans-unit&gt;<br /></span><span class="replaceable">     &lt;/group&gt;</span>
</pre></div>
</div>
<div class="section" xml:lang="en" lang="en">
<div class="titlepage">
<div>
<h3 class="title"><em class="replaceable"><a name=
"s.detailed_mapping.intvector" id=
"s.detailed_mapping.intvector"></a></em><span class=
"replaceable">5.7. Integer Vectors</span></h3>
<span class="replaceable">Each integer vector resources should be
mapped to a single <code>&lt;group&gt;</code> element with a
<code>restype</code> attribute with a value of
<code>"x-icu-intvector"</code>. Each integer value in the integer
vector should be mapped to a single <code>&lt;source&gt;</code>
element inside a <code>&lt;trans-unit&gt;</code> within the
<code>&lt;group&gt;</code> element. The
<code>&lt;trans-unit&gt;</code> element should have
an&nbsp;</span><span class="replaceable"><code>id</code> attrbute
with a value that is the name of integer vector followed by a
<code>_</code> followed by the index of the integer.</span><br />
<span class="replaceable"><br />
For example:</span>
<pre>
<span class=
"replaceable">    /**<br />     * The application version number<br />     */<br />    version :intvector {<br />        1,  // major version<br />        2,  // minor version<br />        3   // patch level<br />    }</span>
</pre>
<span class="replaceable">would be mapped to:</span>
<pre>
<span class="replaceable">  &lt;group</span><span class=
"replaceable"> id = "version" resname = "version"</span><span class="replaceable"> restype = "x-icu-intvector"&gt;<br />    &lt;!--The application version number--&gt;<br />    &lt;trans-unit id = "version_0" restype = "x-icu-integer"&gt;<br />        &lt;source&gt;1&lt;/source&gt;<br />    &lt;/trans-unit&gt;<br />    &lt;trans-unit id = "version_1" </span><span class="replaceable">restype = "x-icu-integer"</span><span class="replaceable">&gt;<br />        &lt;source&gt;2&lt;/source&gt;<br />    &lt;/trans-unit&gt;<br />    &lt;trans-unit id = "version_2" </span><span class="replaceable">restype = "x-icu-integer"</span><span class="replaceable">&gt;<br />        &lt;source&gt;3&lt;/source<br />    &lt;/trans-unit&gt;<br />  &lt;/group&gt;</span>
</pre>
<h3 class="title"><em class="replaceable"><a name=
"s.detailed_mapping.tables" id=
"s.detailed_mapping.tables"></a></em><span class=
"replaceable">5.8.Tables</span></h3>
<span class="replaceable">Each table resource should be mapped to a
single <code>&lt;group&gt;</code> element with a
<code>restype</code> atrribute with a value of
<code>"x-icu-table"</code>. Each resource in the table should have
an <code>id</code> atrribute that is the table name followed by
<code>_</code> followed by the name of the resource.<br />
<br />
For example:</span>
<pre>
<span class=
"replaceable">    /**<br />     * The names of the primary colors<br />     */<br />     primary_colors{<br />        red :string {"Red"}<br /><br />        orange :string {"Orange"}<br /><br />        yellow :string {"Yellow"}<br /><br />        green :string {"Green"}<br /><br />        blue :string {"Blue"}<br /><br />        indigo :string {"Indigo"}<br /><br />        violet :string {"Violet"}<br />     }</span>
</pre>
<span class="replaceable">would be mapped to:</span>
<pre>
<span class="replaceable">   &lt;group</span><span class=
"replaceable"> id = "primary_colors" resname = "primary_colors"</span><span class="replaceable"> restype = "x-icu-table"&gt;<br />        &lt;!--The names of the primary colors--&gt;<br />        &lt;trans-unit id = "primary_colors_red"&gt;<br />            &lt;source&gt;Red&lt;/source&gt;<br />        &lt;/trans-unit&gt;<br />        &lt;trans-unit id = "primary_colors_orange"&gt;<br />            &lt;source&gt;Orange&lt;/source&gt;<br />        &lt;/trans-unit&gt;<br />        &lt;trans-unit id = "</span><span class="replaceable">primary_colors</span><span class="replaceable">_yellow"&gt;<br />            &lt;source&gt;Yellow&lt;/source&gt;<br />        &lt;/trans-unit&gt;<br /></span><span class="replaceable">        &lt;trans-unit id = "</span><span class="replaceable">primary_colors</span><span class="replaceable">_green"&gt;<br />            &lt;source&gt;Green&lt;/source&gt;<br />        &lt;/trans-unit&gt;<br />        &lt;trans-unit id = "</span><span class="replaceable">primary_colors</span><span class="replaceable">_blue"&gt;<br />            &lt;source&gt;Blue&lt;/source&gt;<br />        &lt;/trans-unit&gt;<br />        &lt;trans-unit id = "</span><span class="replaceable">primary_colors</span><span class="replaceable">_indigo"&gt;<br />            &lt;source&gt;Indigo&lt;/source&gt;<br />        &lt;/trans-unit&gt;<br /></span><span class="replaceable">        &lt;trans-unit id = "</span><span class="replaceable">primary_colors</span><span class="replaceable">_violet"&gt;<br />            &lt;source&gt;Violet&lt;/source&gt;<br />        &lt;/trans-unit&gt;<br /></span><span class="replaceable">   &lt;/group&gt;</span>
</pre></div>
</div>
</div>
</div>
</div>
<div class="appendix" xml:lang="en" lang="en">
<h2 class="title" style="clear: both;"><span class=
"replaceable"><a name="id2506698" id=
"id2506698"></a>A.&nbsp;Contributions</span></h2>
<p><span class="replaceable">The following people have contributed
to this document:</span></p>
<ul type="disc">
<li>Ram Viswanadha</li>
<li>Andy Heninger</li>
<li>Yoshito Umaoka</li>
<li>George Rhoten</li>
<li>Eric Mader</li>
<li>David Walters</li>
</ul>
</div>
<div class="appendix" xml:lang="en" lang="en">
<h2 class="title" style="clear: both;"><span class=
"replaceable"><a name="id2506764" id=
"id2506764"></a>B.&nbsp;Examples of converted ICU files</span></h2>
<p><span class="replaceable">Here is an example of an ICU Resource
Bundle file converted to XLIFF:</span></p>
<div class="itemizedlist">
<ul type="disc">
<li>A simple ICU Resource Bundle text file [<a href=
"en.txt">en.txt</a>] converted to XLIFF [<a href=
"en.xlf">en.xlf</a>].</li>
</ul>
<span class="replaceable">Note that these files contain extra
whitespace for readability. It is recommended that filters produce
XLIFF files with the minimum anount of whitespace so that the files
are as small as possible.</span></div>
</div>
<div class="bibliography">
<div class="titlepage">
<div>
<h2 class="title"><span class="replaceable"><a name="bibl" id=
"bibl"></a></span></h2>
<h2 class="title"><span class="replaceable">Issues and
Questions</span></h2>
<ol>
<li>ChoiceFormat may need some work... no XLIFF tool I tried could
deal with <code>&lt;sub&gt;</code> inside of
<code>&lt;ph&gt;</code>.</li>
<li>Should we create an example of a translated &nbsp;bundle?</li>
</ol>
<h2 class="title"><span class="replaceable">References</span></h2>
</div>
</div>
<div class="bibliodiv">
<div class="bibliomixed"><span class="replaceable"><a name=
"refICUUG" id="refICUUG"></a></span>
<p class="bibliomixed"><span class="replaceable">[ ICU <span class=
"abbrev">Userguide</span>] <span class="citetitle"><span class=
"citetitle">The ICU Userguide <a href=
"http://www.icu-project.org/userguide/localizing.html" target=
"_top">http://www.icu-project.org/userguide/localizing.html</a></span></span></span></p>
</div>
<div class="bibliomixed"><span class="replaceable"><a name=
"refOASIS" id="refOASIS"></a></span>
<p class="bibliomixed"><span class="replaceable">[<span class=
"abbrev">OASIS</span>] <span class="citetitle"><span class=
"citetitle"><a href="http://www.oasis-open.org" target=
"_top">Organization for the Advancement of Structured Information
Standards</a></span></span> Web site.</span></p>
</div>
<div class="bibliomixed"><span class="replaceable"><a name=
"refRFC4546" id="refRFC4546"></a></span>
<p class="bibliomixed"><span class="replaceable">[<span class=
"abbrev">RFC 4646</span>] <span class="citetitle"><span class=
"citetitle"><a href="http://www.ietf.org/rfc/rfc4546.txt" target=
"_top">RFC 4646 Tags for the Identification of Languages</a>
.</span></span> Phillips and Davis, Sept 2006.</span></p>
</div>
<div class="bibliomixed"><span class="replaceable"><a name=
"refXMLSpec" id="refXMLSpec"></a></span>
<p class="bibliomixed"><span class="replaceable">[<span class=
"abbrev">XML 1.0</span>] <span class="citetitle"><span class=
"citetitle"><a href="http://www.w3.org/TR/REC-xml/" target=
"_top">Extensible Markup Language (XML) 1.0 (Third Edition)</a>
.</span></span> W3C (World Wide Web Consortium), Feb
2004</span></p>
</div>
<div class="bibliomixed"><span class="replaceable"><a name=
"refXLIFF" id="refXLIFF"></a></span>
<p class="bibliomixed"><span class="replaceable">[<span class=
"abbrev">XLIFF</span> 1.1] <span class="citetitle"><span class=
"citetitle"><a href=
"http://www.oasis-open.org/committees/xliff/documents/xliff-specification.htm"
target="_top">XLIFF 1.1 Specification</a> .</span></span> OASIS
XLIFF Technical Committee, October 2003.</span></p>
<p class="bibliomixed"><span class="replaceable">[<span class=
"abbrev">XLIFF</span> 1.2] <span class="citetitle"><span class=
"citetitle"><a href=
"http://docs.oasis-open.org/xliff/v1.2/xliff-core-1.2-pr-02-20061024.zip"
target="_top">XLIFF 1.2 Draft Specification</a> .</span></span>
OASIS XLIFF Technical Committee, May 2006.</span></p>
<span class="replaceable"><a name="refXLIFFTools" id=
"refXLIFFTools"></a></span></div>
<div class="bibliomixed">
<p class="bibliomixed"><span class="replaceable">[<span class=
"abbrev">XLIFF Tools</span>] <span class="citetitle"><span class=
"citetitle">The XLIFF Tools Project <a href=
"http://xliff-tools.freedesktop.org/" target=
"_top">http://xliff-tools.freedesktop.org/</a></span></span></span></p>
</div>
</div>
</div>
</body>
</html>
